{"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":91719,"databundleVersionId":12937777,"sourceType":"competition"}],"dockerImageVersionId":31089,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/marpinipavansrikar/stackmodel-xgboost-lightbgm-catboost-optuna-tuning?scriptVersionId=254095401\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","source":"<div style=\"\n  border-top: 5px solid #A970FF;\n  padding: 15px 25px;\n  border-radius: 8px;\n  background-color: #1a1a1a;\n  color: white;\n  font-family: 'Segoe UI', sans-serif;\n\">\n   <h1 style=\"color: #A970FF; margin: 60;\"> <span style=\"color:cyan; text-shadow: 0 0 10px cyan;\"> Stacking Classifier</span></h1>\n    <h3 style=\"margin: 0;\"><span style=\"color:cyan; text-shadow: 0 0 10px cyan;\"> XGBClassifier</span></h3>\n    <h3 style=\"margin: 0;\"><span style=\"color:cyan; text-shadow: 0 0 10px cyan;\">LGBMClassifier</span></h3>\n    <h3 style=\"margin: 0;\"><span style=\"color:cyan; text-shadow: 0 0 10px cyan;\">CatBoostClassifier</span></h3>\n</div>","metadata":{},"attachments":{"dc58ae54-b422-4a51-8c68-26dfa6ca7680.png":{"image/png":"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"}}},{"cell_type":"markdown","source":"<div style=\"\n  border-top: 4px solid #A970FF;\n  padding: 15px 20px;\n  border-radius: 8px;\n  background-color: #1a1a1a;\n  color: white;\n  font-family: 'Segoe UI', sans-serif;\n\">\n  <h3 style=\"color: #A970FF; margin-top: 0;\">ðŸ”¹ Data Description </h3>\n</div>","metadata":{}},{"cell_type":"markdown","source":"<div style=\"\n  border-top: 4px solid #A970FF;\n  padding: 16px 20px;\n  background-color: #1a1a1a;\n  color: white;\n  border-radius: 8px;\n  font-family: 'Segoe UI', sans-serif;\n  line-height: 1.6;\n\">\n  <h3 style=\"color: #A970FF; margin-top: 0;\">ðŸ“˜ Dataset Columns</h3>\n  <ul style=\"padding-left: 18px; margin: 10px 0;\">\n    <li><strong>id</strong>: Unique identifier for each row (only in the test set).</li>\n    <li><strong>age</strong>: Age of the client (numeric).</li>\n    <li><strong>job</strong>: Type of job (e.g., admin., technician, services).</li>\n    <li><strong>marital</strong>: Marital status (married, single, divorced).</li>\n    <li><strong>education</strong>: Education level (e.g., primary, secondary, tertiary).</li>\n    <li><strong>default</strong>: Whether the client has credit in default (yes/no).</li>\n    <li><strong>balance</strong>: Average yearly balance (numeric).</li>\n    <li><strong>housing</strong>: Whether the client has a housing loan (yes/no).</li>\n    <li><strong>loan</strong>: Whether the client has a personal loan (yes/no).</li>\n    <li><strong>contact</strong>: Contact communication type (cellular etc).</li>\n    <li><strong>day</strong>: Last contact day.</li>\n    <li><strong>month</strong>: Last contact month.</li>\n    <li><strong>duration</strong>: Last contact duration, in seconds.</li>\n    <li><strong>campaign</strong>: Number of contacts during this campaign.</li>\n    <li><strong>pdays</strong>: Days since the client was last contacted.</li>\n    <li><strong>previous</strong>: Number of contacts before this campaign.</li>\n    <li><strong>poutcome</strong>: Outcome of the previous marketing campaign.</li>\n    <li><strong>y</strong>: Target; whether the client subscribed to a term deposit (1 = yes, 0 = no).</li>\n  </ul>\n</div>","metadata":{}},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","trusted":true,"execution":{"iopub.status.busy":"2025-08-04T07:13:30.587881Z","iopub.execute_input":"2025-08-04T07:13:30.588176Z","iopub.status.idle":"2025-08-04T07:13:30.594904Z","shell.execute_reply.started":"2025-08-04T07:13:30.588153Z","shell.execute_reply":"2025-08-04T07:13:30.593952Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"import optuna\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import OneHotEncoder,OrdinalEncoder,LabelEncoder,StandardScaler\nfrom sklearn.model_selection import train_test_split,cross_val_score,StratifiedKFold,RandomizedSearchCV\nfrom sklearn.metrics import accuracy_score,classification_report,confusion_matrix,roc_auc_score\n\nfrom sklearn.linear_model import LogisticRegression\nfrom xgboost import XGBClassifier\nfrom catboost import CatBoostClassifier\nfrom sklearn.ensemble import RandomForestClassifier,StackingClassifier\nfrom lightgbm import LGBMClassifier\n\nimport warnings \nwarnings.filterwarnings('ignore')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-04T07:13:31.661639Z","iopub.execute_input":"2025-08-04T07:13:31.662291Z","iopub.status.idle":"2025-08-04T07:13:38.062904Z","shell.execute_reply.started":"2025-08-04T07:13:31.662265Z","shell.execute_reply":"2025-08-04T07:13:38.062079Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"<div style=\"\n  border-top: 4px solid #A970FF;\n  padding: 15px 20px;\n  border-radius: 8px;\n  background-color: #1a1a1a;\n  color: white;\n  font-family: 'Segoe UI', sans-serif;\n\">\n  <h3 style=\"color: #A970FF; margin-top: 0;\">ðŸ”¹ Importing Data</h3>\n</div>","metadata":{}},{"cell_type":"code","source":"data_tr = pd.read_csv('/kaggle/input/playground-series-s5e8/train.csv')\ndata_tr.head(3)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-04T07:13:40.600872Z","iopub.execute_input":"2025-08-04T07:13:40.601758Z","iopub.status.idle":"2025-08-04T07:13:42.958907Z","shell.execute_reply.started":"2025-08-04T07:13:40.601729Z","shell.execute_reply":"2025-08-04T07:13:42.958019Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"data_tr.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-04T07:13:42.960425Z","iopub.execute_input":"2025-08-04T07:13:42.961036Z","iopub.status.idle":"2025-08-04T07:13:42.966078Z","shell.execute_reply.started":"2025-08-04T07:13:42.961013Z","shell.execute_reply":"2025-08-04T07:13:42.965392Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"data_te = pd.read_csv('/kaggle/input/playground-series-s5e8/test.csv')\ndata_te.head(3)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-04T07:13:42.967289Z","iopub.execute_input":"2025-08-04T07:13:42.967539Z","iopub.status.idle":"2025-08-04T07:13:43.584672Z","shell.execute_reply.started":"2025-08-04T07:13:42.967521Z","shell.execute_reply":"2025-08-04T07:13:43.583764Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"data_te.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-04T07:13:43.586229Z","iopub.execute_input":"2025-08-04T07:13:43.586496Z","iopub.status.idle":"2025-08-04T07:13:43.592118Z","shell.execute_reply.started":"2025-08-04T07:13:43.586474Z","shell.execute_reply":"2025-08-04T07:13:43.591403Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"data = pd.concat([data_tr,data_te],axis=0)\ndata","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-04T07:13:44.727774Z","iopub.execute_input":"2025-08-04T07:13:44.728105Z","iopub.status.idle":"2025-08-04T07:13:44.858836Z","shell.execute_reply.started":"2025-08-04T07:13:44.728081Z","shell.execute_reply":"2025-08-04T07:13:44.858096Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"<div style=\"\n  border-top: 4px solid #A970FF;\n  padding: 15px 20px;\n  border-radius: 8px;\n  background-color: #1a1a1a;\n  color: white;\n  font-family: 'Segoe UI', sans-serif;\n\">\n  <h3 style=\"color: #A970FF; margin-top: 0;\">ðŸ”¹ Null Values</h3>\n  <p style=\"margin: 0;\">No null values found in the dataset.</p>\n</div>","metadata":{}},{"cell_type":"markdown","source":"> *  Check for null values using the function **isnull()**.\n\n> *  If there any null values they can be further filled by using the function **SimpleImputer()** using which categorical columns can be filled by setting parameter  *stratagy* to mostfrequent else for numerical by setting it to mean.\n","metadata":{}},{"cell_type":"code","source":"sns.heatmap(data.isnull())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-04T07:14:04.922531Z","iopub.execute_input":"2025-08-04T07:14:04.923024Z","iopub.status.idle":"2025-08-04T07:14:30.149707Z","shell.execute_reply.started":"2025-08-04T07:14:04.922996Z","shell.execute_reply":"2025-08-04T07:14:30.148832Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"data.drop(['poutcome','contact'],axis =1 ,inplace = True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-04T07:14:30.151039Z","iopub.execute_input":"2025-08-04T07:14:30.151344Z","iopub.status.idle":"2025-08-04T07:14:30.267622Z","shell.execute_reply.started":"2025-08-04T07:14:30.151313Z","shell.execute_reply":"2025-08-04T07:14:30.266414Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"data.isnull().sum()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-04T07:14:30.268618Z","iopub.execute_input":"2025-08-04T07:14:30.268916Z","iopub.status.idle":"2025-08-04T07:14:30.638028Z","shell.execute_reply.started":"2025-08-04T07:14:30.268887Z","shell.execute_reply":"2025-08-04T07:14:30.63718Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"data.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-04T07:14:30.639316Z","iopub.execute_input":"2025-08-04T07:14:30.639684Z","iopub.status.idle":"2025-08-04T07:14:31.021504Z","shell.execute_reply.started":"2025-08-04T07:14:30.639663Z","shell.execute_reply":"2025-08-04T07:14:31.02068Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"data.describe().T","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-04T07:14:31.022502Z","iopub.execute_input":"2025-08-04T07:14:31.022705Z","iopub.status.idle":"2025-08-04T07:14:31.365016Z","shell.execute_reply.started":"2025-08-04T07:14:31.022689Z","shell.execute_reply":"2025-08-04T07:14:31.364074Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"categorical_cols = data.select_dtypes(include=['object']).columns\ncategorical_cols","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-04T07:14:46.188471Z","iopub.execute_input":"2025-08-04T07:14:46.18882Z","iopub.status.idle":"2025-08-04T07:14:46.39062Z","shell.execute_reply.started":"2025-08-04T07:14:46.188756Z","shell.execute_reply":"2025-08-04T07:14:46.389734Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"for i in categorical_cols :\n    print(i)\n    print(data[i].unique())\n    print('\\n')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-04T07:14:46.50968Z","iopub.execute_input":"2025-08-04T07:14:46.510557Z","iopub.status.idle":"2025-08-04T07:14:46.848144Z","shell.execute_reply.started":"2025-08-04T07:14:46.510528Z","shell.execute_reply":"2025-08-04T07:14:46.847361Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"<div style=\"\n  border-top: 4px solid #A970FF;\n  padding: 15px 20px;\n  border-radius: 8px;\n  background-color: #1a1a1a;\n  color: white;\n  font-family: 'Segoe UI', sans-serif;\n\">\n  <h3 style=\"color: #A970FF; margin-top: 0;\">ðŸ”¹ Outlier Detection</h3>\n</div>","metadata":{}},{"cell_type":"code","source":"sns.boxplot(x = 'balance',data = data_tr)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-04T07:14:47.022493Z","iopub.execute_input":"2025-08-04T07:14:47.022828Z","iopub.status.idle":"2025-08-04T07:14:47.398642Z","shell.execute_reply.started":"2025-08-04T07:14:47.022767Z","shell.execute_reply":"2025-08-04T07:14:47.39782Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"<div style=\"\n  border-top: 4px solid #A970FF;\n  padding: 15px 20px;\n  border-radius: 8px;\n  background-color: #1a1a1a;\n  color: white;\n  font-family: 'Segoe UI', sans-serif;\n\">\n  <h3 style=\"color: #A970FF; margin-top: 0;\">ðŸ”¹ Encoding Categorical Cols</h3>\n</div>","metadata":{}},{"cell_type":"code","source":"encoder = OrdinalEncoder()\n\ndata[categorical_cols] = encoder.fit_transform(data[categorical_cols])\n#data.drop(categorical_cols,inplace=True,axis=1)\ndata","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T10:20:12.597469Z","iopub.execute_input":"2025-08-03T10:20:12.597716Z","iopub.status.idle":"2025-08-03T10:20:14.309467Z","shell.execute_reply.started":"2025-08-03T10:20:12.597697Z","shell.execute_reply":"2025-08-03T10:20:14.308574Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# encoder = OneHotEncoder(drop = 'first')\n\n# data[encoder.get_feature_names_out()] = pd.DataFrame(encoder.fit_transform(data[categorical_cols]).toarray(),columns = encoder.get_feature_names_out())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T10:20:14.310366Z","iopub.execute_input":"2025-08-03T10:20:14.3106Z","iopub.status.idle":"2025-08-03T10:20:14.314331Z","shell.execute_reply.started":"2025-08-03T10:20:14.31058Z","shell.execute_reply":"2025-08-03T10:20:14.313614Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"<div style=\"\n  border-top: 4px solid #A970FF;\n  padding: 15px 20px;\n  border-radius: 8px;\n  background-color: #1a1a1a;\n  color: white;\n  font-family: 'Segoe UI', sans-serif;\n\">\n  <h3 style=\"color: #A970FF; margin-top: 0;\">ðŸ”¹ Splitting Data</h3>\n</div>","metadata":{}},{"cell_type":"code","source":"data_te=data[data['y'].isnull()]\ndata_tr=data[~data['y'].isnull()]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T10:20:32.268421Z","iopub.execute_input":"2025-08-03T10:20:32.268749Z","iopub.status.idle":"2025-08-03T10:20:32.365247Z","shell.execute_reply.started":"2025-08-03T10:20:32.268722Z","shell.execute_reply":"2025-08-03T10:20:32.364242Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"data_tr.head(3)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T10:20:33.135915Z","iopub.execute_input":"2025-08-03T10:20:33.136223Z","iopub.status.idle":"2025-08-03T10:20:33.151502Z","shell.execute_reply.started":"2025-08-03T10:20:33.136201Z","shell.execute_reply":"2025-08-03T10:20:33.15068Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"data_tr.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T10:20:34.775202Z","iopub.execute_input":"2025-08-03T10:20:34.775505Z","iopub.status.idle":"2025-08-03T10:20:34.781283Z","shell.execute_reply.started":"2025-08-03T10:20:34.775481Z","shell.execute_reply":"2025-08-03T10:20:34.780268Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"data_te.drop('y',axis = 1,inplace = True)\ndata_te.head(3)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T10:20:35.192069Z","iopub.execute_input":"2025-08-03T10:20:35.192783Z","iopub.status.idle":"2025-08-03T10:20:35.2303Z","shell.execute_reply.started":"2025-08-03T10:20:35.192744Z","shell.execute_reply":"2025-08-03T10:20:35.229398Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"data_te.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T10:20:35.562605Z","iopub.execute_input":"2025-08-03T10:20:35.563407Z","iopub.status.idle":"2025-08-03T10:20:35.569407Z","shell.execute_reply.started":"2025-08-03T10:20:35.56337Z","shell.execute_reply":"2025-08-03T10:20:35.568612Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"X = data_tr.drop('y',axis = 1)\ny = data_tr['y']\n\nX.shape , y.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T10:20:35.896648Z","iopub.execute_input":"2025-08-03T10:20:35.897067Z","iopub.status.idle":"2025-08-03T10:20:35.957046Z","shell.execute_reply.started":"2025-08-03T10:20:35.897033Z","shell.execute_reply":"2025-08-03T10:20:35.956146Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.25,random_state=42,stratify=y)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T10:20:38.520276Z","iopub.execute_input":"2025-08-03T10:20:38.520675Z","iopub.status.idle":"2025-08-03T10:20:39.001492Z","shell.execute_reply.started":"2025-08-03T10:20:38.520635Z","shell.execute_reply":"2025-08-03T10:20:39.000614Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"X_train, X_valid, y_train, y_valid = train_test_split(\n    X, y, test_size=0.2, stratify=y, random_state=42\n)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T10:20:57.032998Z","iopub.execute_input":"2025-08-03T10:20:57.033731Z","iopub.status.idle":"2025-08-03T10:20:57.500727Z","shell.execute_reply.started":"2025-08-03T10:20:57.0337Z","shell.execute_reply":"2025-08-03T10:20:57.500006Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"<div style=\"\n  border-top: 4px solid #A970FF;\n  padding: 15px 20px;\n  border-radius: 8px;\n  background-color: #1a1a1a;\n  color: white;\n  font-family: 'Segoe UI', sans-serif;\n\">\n  <h3 style=\"color: #A970FF; margin-top: 0;\">ðŸ”¹ Hyper Tuning</h3>\n</div>","metadata":{}},{"cell_type":"code","source":"# XGBClassifier\n\ndef objective_xgb(trial):\n    params_xgb = {\n        \"learning_rate\": trial.suggest_float(\"learning_rate\", 0.01, 0.3),\n        \"max_depth\": trial.suggest_int(\"max_depth\", 5, 15),\n        \"min_child_weight\": trial.suggest_int(\"min_child_weight\", 1, 10),\n        \"gamma\": trial.suggest_float(\"gamma\", 0, 5),\n        \"subsample\": trial.suggest_float(\"subsample\", 0.5, 1.0),\n        \"colsample_bytree\": trial.suggest_float(\"colsample_bytree\", 0.5, 1.0),\n        \"reg_lambda\": trial.suggest_float(\"reg_lambda\", 1, 10), \n        \"reg_alpha\": trial.suggest_float(\"reg_alpha\", 0, 1),\n        \"scale_pos_weight\": trial.suggest_int(\"scale_pos_weight\", 1, 5),\n        \"objective\": \"binary:logistic\",\n        \"eval_metric\": \"auc\",\n        \"n_jobs\": -1,\n        \"random_state\": 42\n    }\n    \n    model_xgb = XGBClassifier(**params_xgb)\n    \n    skf = StratifiedKFold(n_splits=5, shuffle=True, random_state=42)\n    scores = cross_val_score(model_xgb, X, y, scoring='roc_auc', cv=skf, n_jobs=-1)\n    return scores.mean()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T10:23:26.4857Z","iopub.execute_input":"2025-08-03T10:23:26.486486Z","iopub.status.idle":"2025-08-03T10:23:26.493338Z","shell.execute_reply.started":"2025-08-03T10:23:26.486458Z","shell.execute_reply":"2025-08-03T10:23:26.492246Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"study_xgb = optuna.create_study(direction=\"maximize\")\nstudy_xgb.optimize(objective_xgb, n_trials=10)\n\nprint(study_xgb.best_params)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T10:23:26.950328Z","iopub.execute_input":"2025-08-03T10:23:26.950633Z","iopub.status.idle":"2025-08-03T10:48:42.696909Z","shell.execute_reply.started":"2025-08-03T10:23:26.950607Z","shell.execute_reply":"2025-08-03T10:48:42.696125Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"print(\"Best AUC:\", study_xgb.best_value)\nprint(\"Best Parameters:\")\nprint(study_xgb.best_params)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T11:10:46.293521Z","iopub.execute_input":"2025-08-03T11:10:46.29549Z","iopub.status.idle":"2025-08-03T11:10:46.302936Z","shell.execute_reply.started":"2025-08-03T11:10:46.295445Z","shell.execute_reply":"2025-08-03T11:10:46.301844Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"optuna.visualization.plot_optimization_history(study_xgb)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T11:10:47.688365Z","iopub.execute_input":"2025-08-03T11:10:47.68869Z","iopub.status.idle":"2025-08-03T11:10:47.711587Z","shell.execute_reply.started":"2025-08-03T11:10:47.688665Z","shell.execute_reply":"2025-08-03T11:10:47.710646Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"optuna.visualization.plot_parallel_coordinate(study_xgb)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T11:11:11.287941Z","iopub.execute_input":"2025-08-03T11:11:11.288231Z","iopub.status.idle":"2025-08-03T11:11:11.303693Z","shell.execute_reply.started":"2025-08-03T11:11:11.288211Z","shell.execute_reply":"2025-08-03T11:11:11.302877Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"optuna.visualization.plot_slice(study_xgb,params=['learning_rate','max_depth','min_child_weight','subsample'])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T11:11:13.841002Z","iopub.execute_input":"2025-08-03T11:11:13.841283Z","iopub.status.idle":"2025-08-03T11:11:14.179702Z","shell.execute_reply.started":"2025-08-03T11:11:13.841265Z","shell.execute_reply":"2025-08-03T11:11:14.178742Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"optuna.visualization.plot_param_importances(study_xgb)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T11:11:17.128637Z","iopub.execute_input":"2025-08-03T11:11:17.129021Z","iopub.status.idle":"2025-08-03T11:11:17.804026Z","shell.execute_reply.started":"2025-08-03T11:11:17.128995Z","shell.execute_reply":"2025-08-03T11:11:17.803132Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# # LGBMClassifier\n\n# def objective(trial):\n#     params = {\n#         \"objective\": \"binary\",\n#         \"metric\": \"auc\",\n#         \"boosting_type\": \"gbdt\",\n#         \"learning_rate\": trial.suggest_float(\"learning_rate\", 0.01, 0.3),\n#         \"max_depth\": trial.suggest_int(\"max_depth\", 5, 15),\n#         \"min_child_weight\": trial.suggest_int(\"min_child_weight\", 1, 10),\n#         \"subsample\": trial.suggest_float(\"subsample\", 0.5, 1.0),\n#         \"colsample_bytree\": trial.suggest_float(\"colsample_bytree\", 0.5, 1.0),\n#         \"reg_lambda\": trial.suggest_float(\"reg_lambda\", 1, 10),\n#         \"reg_alpha\": trial.suggest_float(\"reg_alpha\", 0, 1),\n#         \"scale_pos_weight\": trial.suggest_int(\"scale_pos_weight\", 1, 5),  # For imbalance\n#         \"n_estimators\": 1000,\n#         \"verbosity\": -1,\n#         \"n_jobs\": -1,\n#         \"random_state\": 42\n#     }\n\n#     model_lgb = LGBMClassifier(**params)\n    \n#     skf = StratifiedKFold(n_splits=5, shuffle=True, random_state=42)\n#     scores = cross_val_score(model_lgb, X, y, scoring='roc_auc', cv=skf, n_jobs=-1)\n#     return scores.mean()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T11:11:20.586792Z","iopub.execute_input":"2025-08-03T11:11:20.587156Z","iopub.status.idle":"2025-08-03T11:11:20.591626Z","shell.execute_reply.started":"2025-08-03T11:11:20.587131Z","shell.execute_reply":"2025-08-03T11:11:20.590805Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# study_lgb = optuna.create_study(direction='maximize')\n# study_lgb.optimize(objective,n_trials=50) \n\n# print(study_lgb.best_params)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T11:11:20.995504Z","iopub.execute_input":"2025-08-03T11:11:20.995805Z","iopub.status.idle":"2025-08-03T11:11:20.999902Z","shell.execute_reply.started":"2025-08-03T11:11:20.995781Z","shell.execute_reply":"2025-08-03T11:11:20.998975Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# print(\"Best AUC:\", study_lgb.best_value)\n# print(\"Best Parameters:\")\n# print(study_lgb.best_params)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T11:11:22.870424Z","iopub.execute_input":"2025-08-03T11:11:22.870703Z","iopub.status.idle":"2025-08-03T11:11:22.874749Z","shell.execute_reply.started":"2025-08-03T11:11:22.870684Z","shell.execute_reply":"2025-08-03T11:11:22.873897Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"#CatBoostClassifier\n\n# def objective_cat(trial):\n#     params = {\n#         \"iterations\": 300,  # Lower iterations for speed\n#         \"learning_rate\": trial.suggest_float(\"learning_rate\", 0.02, 0.2),\n#         \"depth\": trial.suggest_int(\"depth\", 4, 10),\n#         \"l2_leaf_reg\": trial.suggest_float(\"l2_leaf_reg\", 1, 5),\n#         \"bagging_temperature\": trial.suggest_float(\"bagging_temperature\", 0, 1),\n#         \"random_strength\": trial.suggest_float(\"random_strength\", 1, 10),\n#         \"scale_pos_weight\": trial.suggest_float(\"scale_pos_weight\", 1, 5),\n#         \"loss_function\": \"Logloss\",\n#         \"eval_metric\": \"AUC\",\n#         \"task_type\": \"CPU\",\n#         \"random_seed\": 42,\n#         \"verbose\": 0\n#     }\n\n#     model = CatBoostClassifier(**params)\n\n#     skf = StratifiedKFold(n_splits=3, shuffle=True, random_state=42)\n#     auc_scores = []\n\n#     for train_idx, val_idx in skf.split(X, y):\n#         X_train, X_val = X.iloc[train_idx], X.iloc[val_idx]\n#         y_train, y_val = y.iloc[train_idx], y.iloc[val_idx]\n\n#         model.fit(X_train, y_train,\n#                   eval_set=(X_val, y_val),\n#                   early_stopping_rounds=20,\n#                   verbose=0)\n\n#         preds = model.predict_proba(X_val)[:, 1]\n#         auc = roc_auc_score(y_val, preds)\n#         auc_scores.append(auc)\n\n#    return np.mean(auc_scores)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T11:11:23.212072Z","iopub.execute_input":"2025-08-03T11:11:23.212357Z","iopub.status.idle":"2025-08-03T11:11:23.216853Z","shell.execute_reply.started":"2025-08-03T11:11:23.212334Z","shell.execute_reply":"2025-08-03T11:11:23.216025Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# study_cat = optuna.create_study(direction=\"maximize\")\n# study_cat.optimize(objective_cat, n_trials=50)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T11:11:35.618653Z","iopub.execute_input":"2025-08-03T11:11:35.619438Z","iopub.status.idle":"2025-08-03T11:11:35.623076Z","shell.execute_reply.started":"2025-08-03T11:11:35.619406Z","shell.execute_reply":"2025-08-03T11:11:35.622245Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# print(\"Best AUC:\", study_cat.best_value)\n# print(\"Best Parameters:\")\n# print(study_cat.best_params)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T11:11:35.949131Z","iopub.execute_input":"2025-08-03T11:11:35.949434Z","iopub.status.idle":"2025-08-03T11:11:35.953554Z","shell.execute_reply.started":"2025-08-03T11:11:35.949412Z","shell.execute_reply":"2025-08-03T11:11:35.952554Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"<div style=\"\n  border-top: 4px solid #A970FF;\n  padding: 15px 20px;\n  border-radius: 8px;\n  background-color: #1a1a1a;\n  color: white;\n  font-family: 'Segoe UI', sans-serif;\n\">\n  <h3 style=\"color: #A970FF; margin-top: 0;\">ðŸ”¹ Model Training</h3>\n</div>","metadata":{}},{"cell_type":"code","source":"# --- Best parameters for XGBoost ---\n\nbest_params_xgb = {\n    'tree_method': 'hist',\n    'grow_policy': 'lossguide',\n    'learning_rate': 0.1324728374170519,\n    'max_depth': 15,\n    'min_child_weight': 1,\n    'gamma': 4.102757206894572,\n    'subsample': 0.7935747579901027,\n    'colsample_bytree': 0.7689373903003877,\n    'reg_lambda': 2.8000950886019194,\n    'reg_alpha': 0.19031211862487019,\n    'scale_pos_weight': 2,\n    'n_estimators': 1000,\n    'n_jobs': -1,\n    'use_label_encoder': False,\n    'random_state': 42\n}\n\n# --- Best parameters for LightGBM ---\nbest_params_lgb = {\n    'boosting_type': 'gbdt', \n    'objective': 'binary',\n    'learning_rate': 0.152219039721027,\n    'max_depth': 15,\n    'min_child_weight': 10,\n    'subsample': 0.905148363066119,\n    'colsample_bytree': 0.5787781539576926,\n    'reg_lambda': 9.41423040696132,\n    'reg_alpha': 0.8763838886552703,\n    'scale_pos_weight': 1,\n    'n_estimators': 1000,\n    'n_jobs': -1,\n    'random_state': 42\n}\n\n# --- Best parameters for CatBoost ---\nbest_params_cat = {\n    'bootstrap_type': 'Bayesian',        \n    'od_type': 'Iter',\n    'learning_rate': 0.1999699882364641,\n    'depth': 8,\n    'l2_leaf_reg': 2.507360857322905,\n    'bagging_temperature': 0.2614694590017668,\n    'random_strength': 2.0561522816604745,\n    'scale_pos_weight': 4.615417108153387,\n    'iterations': 1000,\n    'loss_function': 'Logloss',\n    'eval_metric': 'AUC',\n    'verbose': 0,\n    'task_type': 'CPU',\n    'random_seed': 42\n}","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T11:11:37.784572Z","iopub.execute_input":"2025-08-03T11:11:37.784993Z","iopub.status.idle":"2025-08-03T11:11:37.791691Z","shell.execute_reply.started":"2025-08-03T11:11:37.784967Z","shell.execute_reply":"2025-08-03T11:11:37.790774Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"model_lgb = LGBMClassifier(**best_params_lgb)\nmodel_xgb = XGBClassifier(**best_params_xgb)\nmodel_cat = CatBoostClassifier(**best_params_cat)\n\nstacked_model = StackingClassifier(\n    estimators=[\n        ('lgb', model_lgb),\n        ('xgb', model_xgb),\n        ('cat', model_cat)\n    ],\n    final_estimator=LogisticRegression(max_iter=100000),\n    n_jobs=-1,\n    passthrough=False\n)\n\nstacked_model.fit(X, y)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T11:11:42.751618Z","iopub.execute_input":"2025-08-03T11:11:42.751966Z","iopub.status.idle":"2025-08-03T11:31:35.064693Z","shell.execute_reply.started":"2025-08-03T11:11:42.751942Z","shell.execute_reply":"2025-08-03T11:31:35.06289Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"<div style=\"\n  border-top: 4px solid #A970FF;\n  padding: 15px 20px;\n  border-radius: 8px;\n  background-color: #1a1a1a;\n  color: white;\n  font-family: 'Segoe UI', sans-serif;\n\">\n  <h3 style=\"color: #A970FF; margin-top: 0;\">ðŸ”¹ Evaluating Model</h3>\n</div>","metadata":{}},{"cell_type":"code","source":"accuracy_score(y,stacked_model.predict(X))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T11:32:45.029938Z","iopub.execute_input":"2025-08-03T11:32:45.030245Z","iopub.status.idle":"2025-08-03T11:33:13.86628Z","shell.execute_reply.started":"2025-08-03T11:32:45.030221Z","shell.execute_reply":"2025-08-03T11:33:13.865418Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"prediction = stacked_model.predict(X)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T11:33:21.602028Z","iopub.execute_input":"2025-08-03T11:33:21.602336Z","iopub.status.idle":"2025-08-03T11:33:50.380027Z","shell.execute_reply.started":"2025-08-03T11:33:21.602313Z","shell.execute_reply":"2025-08-03T11:33:50.378863Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"report = classification_report(y, prediction)\nprint(report)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T11:33:50.381571Z","iopub.execute_input":"2025-08-03T11:33:50.382218Z","iopub.status.idle":"2025-08-03T11:33:52.978646Z","shell.execute_reply.started":"2025-08-03T11:33:50.382184Z","shell.execute_reply":"2025-08-03T11:33:52.977743Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"cm = confusion_matrix(y, prediction)\n\nsns.heatmap(cm, annot=True, fmt='d', cmap='Blues')\nplt.xlabel('Predicted')\nplt.ylabel('Actual')\nplt.title('Confusion Matrix')\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T11:34:43.38653Z","iopub.execute_input":"2025-08-03T11:34:43.3869Z","iopub.status.idle":"2025-08-03T11:34:44.198357Z","shell.execute_reply.started":"2025-08-03T11:34:43.386858Z","shell.execute_reply":"2025-08-03T11:34:44.197428Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"<div style=\"\n  border-top: 4px solid #A970FF;\n  padding: 15px 20px;\n  border-radius: 8px;\n  background-color: #1a1a1a;\n  color: white;\n  font-family: 'Segoe UI', sans-serif;\n\">\n  <h3 style=\"color: #A970FF; margin-top: 0;\">ðŸ”¹ Output Prediction</h3>\n</div>","metadata":{}},{"cell_type":"code","source":"test_predict = stacked_model.predict(data_te)\ntest_predict","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T11:34:54.955459Z","iopub.execute_input":"2025-08-03T11:34:54.955772Z","iopub.status.idle":"2025-08-03T11:35:04.774446Z","shell.execute_reply.started":"2025-08-03T11:34:54.955749Z","shell.execute_reply":"2025-08-03T11:35:04.773548Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"<div style=\"\n  border-top: 4px solid #A970FF;\n  padding: 15px 20px;\n  border-radius: 8px;\n  background-color: #1a1a1a;\n  color: white;\n  font-family: 'Segoe UI', sans-serif;\n\">\n  <h3 style=\"color: #A970FF; margin-top: 0;\">ðŸ”¹ Submission</h3>\n</div>","metadata":{}},{"cell_type":"code","source":"Submission = pd.DataFrame({'id':data_te['id'],'y':test_predict})\nSubmission","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T11:35:04.775737Z","iopub.execute_input":"2025-08-03T11:35:04.776007Z","iopub.status.idle":"2025-08-03T11:35:04.789041Z","shell.execute_reply.started":"2025-08-03T11:35:04.775987Z","shell.execute_reply":"2025-08-03T11:35:04.788211Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"Submission.to_csv('submission.csv',index = False)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T11:35:04.789719Z","iopub.execute_input":"2025-08-03T11:35:04.78997Z","iopub.status.idle":"2025-08-03T11:35:05.072876Z","shell.execute_reply.started":"2025-08-03T11:35:04.789951Z","shell.execute_reply":"2025-08-03T11:35:05.071929Z"}},"outputs":[],"execution_count":null}]}